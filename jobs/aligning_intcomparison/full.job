#!/bin/bash

#SBATCH --partition=gpu
#SBATCH --gpus=1
#SBATCH --job-name=Full
#SBATCH --ntasks=1
#SBATCH --time=24:00:00
#SBATCH --output=./jobs/aligning_intcomparison/output/full_%A.out
#SBATCH --exclude=gcn45 # this node seems buggy

module purge
module load 2023
module load Anaconda3/2023.07-2

cd $HOME/thesis/elk-generalization/

source activate elk-generalization

data_dir="/scratch-shared/tmp.S8HctVrpjHkkretschmar"

# Vars we loop through
model_names=("pythia-410M" "pythia-1B" "pythia-1.4B" "pythia-2.8B" "pythia-6.9B" "pythia-12B")
dataset_name="quirky_intcomparison"

# EXTRACT
# Extract hiddens for all configurations in which persona is introduced 
max_examples=(4096 1024)
splits=(train test)

filter_cols=("persona_introduced" "persona_responds" "objective_label" "quirky_label")
persona_introduced_vals=(True)
persona_responds_vals=(True False)
objective_label_vals=(True False)
quirky_label_vals=(True False)

for (( m=0; m<${#model_names[@]}; m++ )); do
    model_name=${model_names[m]}
    for (( i=0; i<${#splits[@]}; i++ )); do
        max_example=${max_examples[i]}
        split=${splits[i]}
        for (( i_pi=0; i_pi<${#persona_introduced_vals[@]}; i_pi++ )); do
            persona_introduced=${persona_introduced_vals[i_pi]}
            for (( i_pr=0; i_pr<${#persona_responds_vals[@]}; i_pr++ )); do
                persona_responds=${persona_responds_vals[i_pr]}
                for (( i_ol=0; i_ol<${#objective_label_vals[@]}; i_ol++ )); do
                    objective_label=${objective_label_vals[i_ol]}
                    for (( i_ql=0; i_ql<${#quirky_label_vals[@]}; i_ql++ )); do
                        quirky_label=${quirky_label_vals[i_ql]}

                        save_dir="pi=${persona_introduced}_pr=${persona_responds}_ol=${objective_label}_ql=${quirky_label}"

                        srun python -u elk_generalization/elk/extract_hiddens_adapted.py \
                            --model EleutherAI/$model_name \
                            --dataset $data_dir/experiments/$dataset_name \
                            --save-path $data_dir/experiments/$dataset_name/$model_name/$save_dir \
                            --max-examples $max_example \
                            --splits $split \
                            --label-cols "label" "objective_label" ${filter_cols[@]} \
                            --filter-cols ${filter_cols[@]} \
                            --filter-values ${persona_introduced} ${persona_responds} ${objective_label} ${quirky_label}
                    done
                done
            done
        done
    done
done

# TRANSFER
# Define settings
reporters=(ccs crc lr lr-on-pair lda mean-diff random)
max_train_examples=4096

# Vars for templates and prefixes
label=objective_labels
filter_cols=("persona_introduceds" "persona_respondss")

alignment_settings=(
    "train_pos_aligned=(\"objective_labels\" \"quirky_labels\"); train_neg_aligned=()"  # ol,ql positively aligned
    "train_pos_aligned=(\"objective_labels\"); train_neg_aligned=()"                     # ol,ql independent
    "train_pos_aligned=(\"objective_labels\"); train_neg_aligned=(\"quirky_labels\")"     # ol,ql negatively aligned
)

# Loop through the settings
for ((i_alignment = 0; i_alignment < ${#alignment_settings[@]}; i_alignment++)); do
    echo "Extract hiddens with settings for iteration $((i_alignment+1))..."
    eval "${alignment_settings[i_alignment]}"
    for (( m=0; m<${#model_names[@]}; m++ )); do
        model_name=${model_names[m]}
        echo $data_dir/experiments/$dataset_name/$model_name/train
        for (( i_pi=0; i_pi<${#persona_introduced_vals[@]}; i_pi++ )); do
            persona_introduced=${persona_introduced_vals[i_pi]}
            for (( i_pr=0; i_pr<${#persona_responds_vals[@]}; i_pr++ )); do
                persona_responds=${persona_responds_vals[i_pr]}

                for (( i=0; i<${#reporters[@]}; i++ )); do
                    reporter=${reporters[i]}
                    srun python -u elk_generalization/elk/transfer_adapted.py \
                        --reporter $reporter \
                        --max-train-examples ${max_train_examples} \
                        --label-col $label \
                        --filter-cols ${filter_cols[@]} \
                        --filter-values ${persona_introduced} ${persona_responds} \
                        --pos-aligned ${train_pos_aligned[@]} \
                        --neg-aligned ${train_neg_aligned[@]} \
                        --verbose \
                        --data-dir $data_dir/experiments/$dataset_name/$model_name
                done
            done
        done
    done
done

reporters=("lr" "mean-diff" "lda" "lr-on-pair" "ccs" "crc")

# Summarize quirky-prompts
srun python -u elk_generalization/elk/summarize_transfer_results_adapted.py \
    --models ${model_names[@]}\
    --root-dir $data_dir/experiments/quirky_intcomparison \
    --reporters ${reporters[@]} \
    --metric auroc \
    --label-col objective_labels \
    --save-csv-path $data_dir/experiments/quirky_intcomparison/summary_aligning_1.csv