#!/bin/bash

#SBATCH --partition=gpu
#SBATCH --gpus=1
#SBATCH --job-name=CDTransfer
#SBATCH --ntasks=1
#SBATCH --time=04:00:00
#SBATCH --output=./jobs/aligning_intcomparison/output/transfer_%A.out
#SBATCH --exclude=gcn45 # this node seems buggy


module purge
module load 2023
module load Anaconda3/2023.07-2

cd $HOME/thesis/elk-generalization/

source activate elk-generalization

data_dir="/scratch-shared/tmp.S8HctVrpjHkkretschmar"
experiment_name="quirky_intcomparison"

model_names=("pythia-410M" "pythia-1B" "pythia-1.4B"  "pythia-2.8B" "pythia-6.9B" "pythia-12B")
reporters=(ccs crc lr lr-on-pair lda mean-diff random)
max_train_examples=4096

# Vars for templates and prefixes
label=objective_labels
filter_cols=("persona_introduceds" "persona_respondss")
persona_introduced_vals=(True)
persona_responds_vals=(True False)

# # OPTION 1: All aligned vs. all-but-one aligned
# # Problem: Oppositely aligning for train is not possible
# train_aligned=("objective_label" "quirky_label")
# test_flip_alignment=("quirky_label")

# train_aligned=("objective_label")
# test_flip_alignment=("quirky_label")

# OPTION 2: Explicitly state alignments for train and test
train_pos_aligned=("objective_labels")
train_neg_aligned=("quirky_labels")


for (( m=0; m<${#model_names[@]}; m++ )); do
    model_name=${model_names[m]}
    echo $data_dir/experiments/$experiment_name/$dataset_name/$model_name/train
    for (( i_pi=0; i_pi<${#persona_introduced_vals[@]}; i_pi++ )); do
        persona_introduced=${persona_introduced_vals[i_pi]}
        for (( i_pr=0; i_pr<${#persona_responds_vals[@]}; i_pr++ )); do
            persona_responds=${persona_responds_vals[i_pr]}

            for (( i=0; i<${#reporters[@]}; i++ )); do
                reporter=${reporters[i]}
                srun python -u elk_generalization/elk/transfer_adapted.py \
                    --reporter $reporter \
                    --max-train-examples ${max_train_examples} \
                    --label-col $label \
                    --filter-cols ${filter_cols[@]} \
                    --filter-values ${persona_introduced} ${persona_responds} \
                    --pos-aligned ${train_pos_aligned[@]} \
                    --neg-aligned ${train_neg_aligned[@]} \
                    --verbose \
                    --prevent-skip \
                    --data-dir $data_dir/experiments/$experiment_name/$dataset_name/$model_name
            done
        done
    done
done


# VARS FOR 2nd EXPERIMENT (the other way round)
# train_pos_aligned=("objective_label")
# train_neg_aligned=("quirky_label")


# VARS FOR 3rd EXPERIMENT (independent)
# train_pos_aligned=("objective_label")
# train_neg_aligned=()